{
	"name": "DF_LOOKUP_UPSERT",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_ADLS_CRIC_CUST",
						"type": "DatasetReference"
					},
					"name": "customers"
				},
				{
					"dataset": {
						"referenceName": "DS_ADLS_CRIC_ORDERS",
						"type": "DatasetReference"
					},
					"name": "orders"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_ASQL_ALLCUST",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "alterRow1"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          cid as integer,",
				"          cname as string,",
				"          cscore as integer,",
				"          orderid as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> customers",
				"source(output(",
				"          orderid as integer,",
				"          ordername as string,",
				"          orderdate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> orders",
				"orders select(mapColumn(",
				"          order_orderid = orderid,",
				"          ordername,",
				"          orderdate",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"customers, select1 lookup(orderid == order_orderid,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(ordername, true),",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 alterRow(deleteIf(cname=='abd'),",
				"     upsertIf(true())) ~> alterRow1",
				"alterRow1 select(mapColumn(",
				"          cid,",
				"          cname,",
				"          cscore,",
				"          cust_orderid = orderid,",
				"          ordername,",
				"          orderdate",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['cname','cust_orderid'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}