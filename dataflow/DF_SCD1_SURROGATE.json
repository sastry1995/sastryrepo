{
	"name": "DF_SCD1_SURROGATE",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_ADLS_SCD1",
						"type": "DatasetReference"
					},
					"name": "custcsv"
				},
				{
					"dataset": {
						"referenceName": "DS_ASQL_SCD1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_ASQL_SCD1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "alterRow1"
				},
				{
					"name": "surrogateKey1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          cid as integer,",
				"          cname as string,",
				"          manager as string,",
				"          city as string,",
				"          start_date as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> custcsv",
				"source(output(",
				"          maxvalue as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select max(csurrkey) as maxvalue from DIM_CUST',",
				"     format: 'query') ~> source1",
				"surrogateKey1 alterRow(upsertIf(true())) ~> alterRow1",
				"custcsv keyGenerate(output(csurrkey as long),",
				"     startAt: 100000L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          csurrkey as string,",
				"          cid as string,",
				"          cname as string,",
				"          manager as string,",
				"          city as string,",
				"          start_date as timestamp,",
				"          update_date as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['cid'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}